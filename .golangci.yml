# golangci-lint configuration
# Based on common Go project patterns and go-order-utils style

run:
  timeout: 5m
  tests: true
  skip-dirs:
    - vendor
    - go-order-utils-main
    - py-clob-client-main

linters:
  enable:
    - gofmt
    - golint
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - structcheck
    - varcheck
    - ineffassign
    - deadcode
    - typecheck
    - gosec
    - gocyclo
    - dupl
    - misspell
    - unparam
    - nakedret
    - prealloc
    - scopelint
    - gocritic
    - gochecknoinits
    - gochecknoglobals

  disable:
    - godox  # Allow TODO/FIXME comments
    - gocognit  # Cognitive complexity can be high for complex business logic

linters-settings:
  gocyclo:
    min-complexity: 15
  
  dupl:
    threshold: 100
  
  goconst:
    min-len: 3
    min-occurrences: 3
  
  misspell:
    locale: US
  
  lll:
    line-length: 120
  
  goimports:
    local-prefixes: github.com/pooofdevelopment/go-clob-client
  
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - commentedOutCode
      - whyNoLint

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gochecknoglobals
    
    # Exclude example files from some checks
    - path: examples/
      linters:
        - errcheck
        - gosec
        - unparam
    
    # Allow certain patterns
    - text: "weak cryptographic primitive"
      linters:
        - gosec
    
    # Ignore long lines in auto-generated or data files
    - path: "(.+)_string\\.go"
      linters:
        - lll

  # Maximum issues count per one linter
  max-issues-per-linter: 50
  
  # Maximum count of issues with the same text
  max-same-issues: 3
  
  # Show only new issues in PR
  new: false